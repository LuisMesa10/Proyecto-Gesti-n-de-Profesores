/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto_profesores;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.Set;
import java.util.HashSet;

/**
 *
 * @author Luis Miguel Mesa G. 
 * 
 */
public class Vista extends javax.swing.JFrame {

    private ArrayList<Profesor> ProfTiempoCom = new ArrayList<>();
    private ArrayList<Profesor> ProfCatedra = new ArrayList<>();
    private ArrayList<Profesor> ProfOcasional = new ArrayList<>();
    int contadorFrecuencia = 0;

    TreeSet<Profesor> ConjuntoTC = new TreeSet<>(new Comparator<Profesor>() {
        public int compare(Profesor h1, Profesor h2) {

            return h1.getCedula().compareTo(h2.getCedula());
        }

    });

    TreeSet<Profesor> ConjuntoCat = new TreeSet<>(new Comparator<Profesor>() {
        public int compare(Profesor h1, Profesor h2) {
            return h1.getCedula().compareTo(h2.getCedula());
        }
    });

    TreeSet<Profesor> ConjuntoOcs = new TreeSet<>(new Comparator<Profesor>() {
        public int compare(Profesor h1, Profesor h2) {
            return h1.getCedula().compareTo(h2.getCedula());
        }
    });

    /**
     * Creates new form Vista
     */
    public Vista() throws FileNotFoundException, IOException {
        initComponents();
        setLocationRelativeTo(null);
        CargarArchivo(ProfTiempoCom, ProfOcasional, ProfCatedra);
        CargarConjuntos(); //borrar

        //placeholders
        Placeholder p1 = new Placeholder("Nombre Completo", Nombretxt);
        Placeholder p2 = new Placeholder("Cedula de Ciudadanía", Cedulatxt);
        Placeholder p3 = new Placeholder("Ingrese la Cantidad de Asignaturas que dicta", CantidadAsignaturastxt);
        Placeholder p4 = new Placeholder("Ingrese la Cantidad de Horas que dicta (Semanal)", CantidadHorastxt);
        Placeholder p5 = new Placeholder("(dd/mm/aaaa)", FechaNatxt);

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e){
                System.out.println("Contador de Frecuencia: "+ contadorFrecuencia);
                System.exit(0);
            }
        });
    }

    //Se puede borrar si le daña algo
    public void CargarConjuntos() {
        ConjuntoTC.addAll(ProfTiempoCom);
        ConjuntoCat.addAll(ProfCatedra);
        ConjuntoOcs.addAll(ProfOcasional);
    }

    /**
     * This method is called from within the constructor to initialize the
     * form.WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     *
     * @throws java.io.FileNotFoundException
     */
    @SuppressWarnings("unchecked")
    public void CargarArchivo(ArrayList<Profesor> ProfTiempoCom, ArrayList<Profesor> ProfOcasional, ArrayList<Profesor> ProfCatedra) throws FileNotFoundException, IOException {
        String archivo = "C://Users//Lenovo//OneDrive//Documentos//POLITECNICO LUIS//quinto semestre//AP4//TiempoCompleto.txt";
        BufferedReader br = new BufferedReader(new FileReader(archivo));
        String linea;

        while ((linea = br.readLine()) != null) {
            String[] datos = linea.split(",");
            String cedula = datos[0];
            String nombre = datos[1];
            String genero = datos[2];
            String facultad = datos[3];
            String titulo = datos[4];
            String CantAsig = datos[5];
            String CantHoras = datos[6];
            String Fecha = datos[7];
            String TipoC = datos[8];
            Profesor p1 = new Profesor(cedula, nombre, genero, facultad, titulo, CantAsig, CantHoras, Fecha, TipoC);
            ProfTiempoCom.add(p1);
        }
        br.close();

        String archivo2 = "C://Users//Lenovo//OneDrive//Documentos//POLITECNICO LUIS//quinto semestre//AP4//Catedra.txt";
        BufferedReader br2 = new BufferedReader(new FileReader(archivo2));
        String linea2;
        while ((linea2 = br2.readLine()) != null) {
            String[] datos = linea2.split(",");
            String cedula = datos[0];
            String nombre = datos[1];
            String genero = datos[2];
            String facultad = datos[3];
            String titulo = datos[4];
            String CantAsig = datos[5];
            String CantHoras = datos[6];
            String Fecha = datos[7];
            String TipoC = datos[8];
            Profesor p1 = new Profesor(cedula, nombre, genero, facultad, titulo, CantAsig, CantHoras, Fecha, TipoC);
            ProfCatedra.add(p1);
        }
        br2.close();

        String archivo3 = "C://Users//Lenovo//OneDrive//Documentos//POLITECNICO LUIS//quinto semestre//AP4//Ocasionales.txt";
        BufferedReader br3 = new BufferedReader(new FileReader(archivo3));
        String linea3;
        while ((linea3 = br3.readLine()) != null) {
            String[] datos = linea3.split(",");
            String cedula = datos[0];
            String nombre = datos[1];
            String genero = datos[2];
            String facultad = datos[3];
            String titulo = datos[4];
            String CantAsig = datos[5];
            String CantHoras = datos[6];
            String Fecha = datos[7];
            String TipoC = datos[8];
            Profesor p1 = new Profesor(cedula, nombre, genero, facultad, titulo, CantAsig, CantHoras, Fecha, TipoC);
            ProfOcasional.add(p1);
        }
        br3.close();
    }

    public void Validaciones() {
        //Cedula
        String PatronCedula = "^\\d{10}$";
        if (Cedulatxt.getText().isEmpty()) {
            lblCedula2.setText("*Campo Requerido*");
        } else if (!Cedulatxt.getText().matches(PatronCedula)) {
            lblCedula2.setText("*Cédula Inválida");
        } else {
            lblCedula2.setText("");
        }

        //Nombre
        String PatronNombre = "^[A-Za-záéíóúÁÉÍÓÚüÜñÑ]+(\\s[A-Za-záéíóúÁÉÍÓÚüÜñÑ]+)+$";
        if (Cedulatxt.getText().isEmpty()) {
            lblNombreCompleto.setText("*Campo Requerido*");
        } else if (!Nombretxt.getText().matches(PatronNombre)) {
            lblNombreCompleto.setText("*Nombre Inválido");
        } else {
            lblNombreCompleto.setText("");
        }

        //cantidad horas
        String PatronCantHoras = "^(1[0-9]|20|[1-9])$";
        if (CantidadHorastxt.getText().isEmpty()) {
            lblCantidadHoras1.setText("*Campo Requerido*");
        } else if (!CantidadHorastxt.getText().matches(PatronCantHoras)) {
            lblCantidadHoras1.setText("*Cantidad de Horas Inválida");
        } else {
            lblCantidadHoras1.setText("");
        }

        //cantidad asignaturas
        String PatronCantAsignaturas = "^[1-9]|10$";
        if (CantidadAsignaturastxt.getText().isEmpty()) {
            lblCantidadAsign1.setText("*Campo Requerido*");
        } else if (!CantidadAsignaturastxt.getText().matches(PatronCantAsignaturas)) {
            lblCantidadAsign1.setText("*Cantidad de Asignaturas Inválida");
        } else {
            lblCantidadAsign1.setText("");
        }

        //fecha nacimiento
        String PatronFecha = "^(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[0-2])/\\d{4}$";
        if (FechaNatxt.getText().isEmpty()) {
            lblFechaNac.setText("*Campo Requerido*");
        } else if (!FechaNatxt.getText().matches(PatronFecha)) {
            lblFechaNac.setText("*Fecha de Nacimiento Inválida");
        } else {
            lblFechaNac.setText("");
        }

        //boton 
        if (Nombretxt.getText().isEmpty() || Cedulatxt.getText().isEmpty() || CantidadAsignaturastxt.getText().isEmpty()
                || CantidadHorastxt.getText().isEmpty() || lblCedula2.getText().equals("*Cédula Inválida")
                || lblNombreCompleto.getText().equals("*Nombre Inválido") || lblCantidadHoras1.getText().equals("*Cantidad de Horas Inválida")
                || lblCantidadAsign1.getText().equals("*Cantidad de Asignaturas Inválida")
                || lblFechaNac.getText().equals("*Fecha de Nacimiento Inválida")) {
            BotonNuevoIngreso.setEnabled(false);
        } else {
            BotonNuevoIngreso.setEnabled(true);
        }
        contadorFrecuencia++;

    }

    public void Limpiar() {
        Nombretxt.setText("");
        Cedulatxt.setText("");
        CantidadHorastxt.setText("");
        CantidadAsignaturastxt.setText("");
        FechaNatxt.setText("");
        ComboContrato.setSelectedItem(0);
        JComboFacultad.setSelectedItem(0);
        JComboTitulo.setSelectedItem(0);
        JcomboGenero.setSelectedItem(0);
        contadorFrecuencia++;
    }

    public void MostrarArrayTC() {
        int cont = 0;
        Set<Profesor> SetTC = new HashSet<Profesor>(ProfTiempoCom);

        StringBuilder mensaje = new StringBuilder("Profesores de Tiempo Completo: \n");
        for (Profesor profesor : SetTC) {
            mensaje.append("ID: ").append(profesor.getCedula()).append(". ");
            mensaje.append("Nombre: ").append(profesor.getNombre()).append(". ");
            mensaje.append("Horas Dictadas: ").append(profesor.getCantHoras()).append(". ");
            mensaje.append("Asignaturas: ").append(profesor.getCantAsign()).append(". ");
            mensaje.append("Fecha de Nacimiento: ").append(profesor.getFechaNac()).append(". ");
            mensaje.append("Sexo: ").append(profesor.getGenero()).append(". ");
            mensaje.append("Titulo: ").append(profesor.getTitulo()).append(". ");
            mensaje.append("Facultad: ").append(profesor.getFacultad()).append(". ");
            mensaje.append("Tipo de Contrato: ").append(profesor.getTipoContrato()).append("\n ");
            cont++;
        }
        JOptionPane.showMessageDialog(null, mensaje.toString());
        JOptionPane.showMessageDialog(null, "El total de profesores de Tiempo Completo  es: " + cont);
        contadorFrecuencia++;
    }

    public void MostrarArrayCat() {
        int cont = 0;
        Set<Profesor> SetCat = new HashSet<>(ProfCatedra);
        StringBuilder mensaje = new StringBuilder("Profesores de Tiempo Completo: \n");
        for (Profesor profesor : SetCat) {
            mensaje.append("ID: ").append(profesor.getCedula()).append(". ");
            mensaje.append("Nombre: ").append(profesor.getNombre()).append(". ");
            mensaje.append("Horas Dictadas: ").append(profesor.getCantHoras()).append(". ");
            mensaje.append("Asignaturas: ").append(profesor.getCantAsign()).append(". ");
            mensaje.append("Fecha de Nacimiento: ").append(profesor.getFechaNac()).append(". ");
            mensaje.append("Sexo: ").append(profesor.getGenero()).append(". ");
            mensaje.append("Titulo: ").append(profesor.getTitulo()).append(". ");
            mensaje.append("Facultad: ").append(profesor.getFacultad()).append(". ");
            mensaje.append("Tipo de Contrato: ").append(profesor.getTipoContrato()).append("\n ");
            cont++;
        }
        JOptionPane.showMessageDialog(null, mensaje.toString());
        JOptionPane.showMessageDialog(null, "El total de profesores de Cátedra es: " + cont);
        contadorFrecuencia++;
    }

    public void MostrarArrayOcas() {
        int cont = 0;
        Set<Profesor> SetOcs = new HashSet<>(ProfOcasional);

        StringBuilder mensaje = new StringBuilder("Profesores de Tiempo Completo: \n");
        for (Profesor profesor : SetOcs) {
            mensaje.append("ID: ").append(profesor.getCedula()).append(". ");
            mensaje.append("Nombre: ").append(profesor.getNombre()).append(". ");
            mensaje.append("Horas Dictadas: ").append(profesor.getCantHoras()).append(". ");
            mensaje.append("Asignaturas: ").append(profesor.getCantAsign()).append(". ");
            mensaje.append("Fecha de Nacimiento: ").append(profesor.getFechaNac()).append(". ");
            mensaje.append("Sexo: ").append(profesor.getGenero()).append(". ");
            mensaje.append("Titulo: ").append(profesor.getTitulo()).append(". ");
            mensaje.append("Facultad: ").append(profesor.getFacultad()).append(". ");
            mensaje.append("Tipo de Contrato: ").append(profesor.getTipoContrato()).append(" \n");
            cont++;
        }
        JOptionPane.showMessageDialog(null, mensaje.toString());
        JOptionPane.showMessageDialog(null, "El total de profesores Ocasionales es: " + cont);
        contadorFrecuencia++;
    }

    public void CantHoM(TreeSet<Profesor> Conjunto) {
        int contH = 0;
        int contM = 0;
        for (Profesor profesor : Conjunto) {
            if (profesor.getGenero().equals("Masculino")) {
                contH++;
            } else {
                contM++;
            }
        }
        JOptionPane.showMessageDialog(null, "La cantidad de Hombres es: " + contH + " y la cantidad de Mujeres es: " + contM);
        contadorFrecuencia++;
    }

    public void MostrarFacultadTC(TreeSet<Profesor> Conjunto, String facultad) {
        int cont = 0;
        StringBuilder mensaje = new StringBuilder("Profesores de: " + facultad + "\n");

        for (Profesor profesor : Conjunto) {
            if (profesor.getFacultad().equals(facultad)) {
                mensaje.append("ID: ").append(profesor.getCedula()).append(". ");
                mensaje.append("Nombre: ").append(profesor.getNombre()).append(". ");
                mensaje.append("Horas Dictadas: ").append(profesor.getCantHoras()).append(". ");
                mensaje.append("Asignaturas: ").append(profesor.getCantAsign()).append(". ");
                mensaje.append("Fecha de Nacimiento: ").append(profesor.getFechaNac()).append(". ");
                mensaje.append("Sexo: ").append(profesor.getGenero()).append(". ");
                mensaje.append("Titulo: ").append(profesor.getTitulo()).append(". ");
                mensaje.append("Facultad: ").append(profesor.getFacultad()).append(". ");
                mensaje.append("Tipo de Contrato: ").append(profesor.getTipoContrato()).append(" \n");
                cont++;
            }
        }
        JOptionPane.showMessageDialog(null, mensaje.toString());
        JOptionPane.showMessageDialog(null, "La cantidad de Profesores de Tiempo Completo de Ingeniería es: " + cont);
        contadorFrecuencia++;
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BG = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Cedulatxt = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        Nombretxt = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        CantidadHorastxt = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        CantidadAsignaturastxt = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        FechaNatxt = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        JComboTitulo = new javax.swing.JComboBox<>();
        JcomboGenero = new javax.swing.JComboBox<>();
        JComboFacultad = new javax.swing.JComboBox<>();
        lblNombreCompleto = new javax.swing.JLabel();
        lblFechaNac = new javax.swing.JLabel();
        lblCedula2 = new javax.swing.JLabel();
        lblCantidadHoras1 = new javax.swing.JLabel();
        lblCantidadAsign1 = new javax.swing.JLabel();
        BotonNuevoIngreso = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JSeparator();
        ComboContrato = new javax.swing.JComboBox<>();
        BotonGuardar1 = new javax.swing.JButton();
        BotonMostrar = new javax.swing.JButton();
        BotonOtros = new javax.swing.JButton();
        BotonTotalPrf = new javax.swing.JButton();
        BotonTCyCat = new javax.swing.JButton();
        BotonOcsCat = new javax.swing.JButton();
        BotonTodosContratos = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BG.setBackground(new java.awt.Color(255, 255, 255));
        BG.setForeground(new java.awt.Color(255, 0, 0));
        BG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 153, 0));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N

        jLabel13.setBackground(new java.awt.Color(187, 187, 187));
        jLabel13.setFont(new java.awt.Font("Roboto Medium", 3, 24)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("UNIVERSIDAD POPULAR DEPARTAMENTAL");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(269, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BG.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 100));

        jLabel2.setFont(new java.awt.Font("Roboto Light", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("INFORMACIÓN");
        BG.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 100, 200, -1));

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("CEDULA");
        BG.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 180, 20));

        Cedulatxt.setBackground(new java.awt.Color(255, 255, 255));
        Cedulatxt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        Cedulatxt.setForeground(new java.awt.Color(0, 0, 0));
        Cedulatxt.setBorder(null);
        Cedulatxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CedulatxtActionPerformed(evt);
            }
        });
        Cedulatxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CedulatxtKeyReleased(evt);
            }
        });
        BG.add(Cedulatxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 220, -1));
        BG.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 300, 20));

        jLabel4.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("NOMBRE COMPLETO");
        BG.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 180, -1));

        Nombretxt.setBackground(new java.awt.Color(255, 255, 255));
        Nombretxt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        Nombretxt.setForeground(new java.awt.Color(0, 0, 0));
        Nombretxt.setBorder(null);
        Nombretxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombretxtActionPerformed(evt);
            }
        });
        Nombretxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NombretxtKeyReleased(evt);
            }
        });
        BG.add(Nombretxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 220, -1));
        BG.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 300, -1));

        jLabel5.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("CANTIDAD DE HORAS ");
        BG.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 260, -1));

        CantidadHorastxt.setBackground(new java.awt.Color(255, 255, 255));
        CantidadHorastxt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        CantidadHorastxt.setForeground(new java.awt.Color(0, 0, 0));
        CantidadHorastxt.setBorder(null);
        CantidadHorastxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CantidadHorastxtActionPerformed(evt);
            }
        });
        CantidadHorastxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CantidadHorastxtKeyReleased(evt);
            }
        });
        BG.add(CantidadHorastxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 280, -1));
        BG.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 300, -1));

        jLabel6.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("CANTIDAD DE ASIGNATURAS ");
        BG.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 250, -1));

        CantidadAsignaturastxt.setBackground(new java.awt.Color(255, 255, 255));
        CantidadAsignaturastxt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        CantidadAsignaturastxt.setForeground(new java.awt.Color(0, 0, 0));
        CantidadAsignaturastxt.setBorder(null);
        CantidadAsignaturastxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CantidadAsignaturastxtActionPerformed(evt);
            }
        });
        CantidadAsignaturastxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CantidadAsignaturastxtKeyReleased(evt);
            }
        });
        BG.add(CantidadAsignaturastxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 280, -1));
        BG.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 300, -1));

        jLabel7.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("GÉNERO");
        BG.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 150, 180, 20));
        BG.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, 300, 20));

        jLabel8.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("FACULTAD");
        BG.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 210, 180, -1));
        BG.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 300, -1));

        jLabel9.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("TITULO");
        BG.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 270, 180, -1));
        BG.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, 300, -1));

        jLabel10.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("FECHA DE NACIMIENTO");
        BG.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 330, 250, -1));

        FechaNatxt.setBackground(new java.awt.Color(255, 255, 255));
        FechaNatxt.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        FechaNatxt.setForeground(new java.awt.Color(0, 0, 0));
        FechaNatxt.setBorder(null);
        FechaNatxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FechaNatxtActionPerformed(evt);
            }
        });
        FechaNatxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                FechaNatxtKeyReleased(evt);
            }
        });
        BG.add(FechaNatxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 350, 220, -1));
        BG.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 370, 300, -1));

        JComboTitulo.setBackground(new java.awt.Color(255, 255, 255));
        JComboTitulo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pregrado", "Especialista", "Maestria ", "Doctorado" }));
        JComboTitulo.setBorder(null);
        JComboTitulo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JComboTituloItemStateChanged(evt);
            }
        });
        JComboTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboTituloActionPerformed(evt);
            }
        });
        BG.add(JComboTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 290, 140, 20));

        JcomboGenero.setBackground(new java.awt.Color(255, 255, 255));
        JcomboGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino" }));
        JcomboGenero.setBorder(null);
        JcomboGenero.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JcomboGeneroItemStateChanged(evt);
            }
        });
        BG.add(JcomboGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 170, 140, 20));

        JComboFacultad.setBackground(new java.awt.Color(255, 255, 255));
        JComboFacultad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ingeniería", "Deportes", "Comunicación", "Administración", "Idiomas", "Ciencias Básicas" }));
        JComboFacultad.setBorder(null);
        JComboFacultad.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JComboFacultadItemStateChanged(evt);
            }
        });
        JComboFacultad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboFacultadActionPerformed(evt);
            }
        });
        BG.add(JComboFacultad, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 230, 140, 20));

        lblNombreCompleto.setForeground(new java.awt.Color(255, 0, 0));
        BG.add(lblNombreCompleto, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 170, -1));

        lblFechaNac.setForeground(new java.awt.Color(255, 0, 0));
        BG.add(lblFechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 330, 170, -1));

        lblCedula2.setForeground(new java.awt.Color(255, 0, 0));
        BG.add(lblCedula2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 170, -1));

        lblCantidadHoras1.setForeground(new java.awt.Color(255, 0, 0));
        BG.add(lblCantidadHoras1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 270, 170, -1));

        lblCantidadAsign1.setForeground(new java.awt.Color(255, 0, 0));
        BG.add(lblCantidadAsign1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 330, 170, -1));

        BotonNuevoIngreso.setBackground(new java.awt.Color(102, 102, 102));
        BotonNuevoIngreso.setFont(new java.awt.Font("Roboto Light", 1, 12)); // NOI18N
        BotonNuevoIngreso.setText("GUARDAR INFORMACIÓN");
        BotonNuevoIngreso.setBorder(null);
        BotonNuevoIngreso.setEnabled(false);
        BotonNuevoIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonNuevoIngresoActionPerformed(evt);
            }
        });
        BG.add(BotonNuevoIngreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, 180, 50));
        BG.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 900, 10));

        jSeparator11.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator11.setToolTipText("");
        BG.add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 90, 30, 430));

        jLabel11.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("TIPO DE CONTRATO");
        BG.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 180, -1));
        BG.add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 300, -1));

        ComboContrato.setBackground(new java.awt.Color(255, 255, 255));
        ComboContrato.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiempo Completo", "Ocasional", "Cátedra", "" }));
        ComboContrato.setBorder(null);
        ComboContrato.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboContratoItemStateChanged(evt);
            }
        });
        ComboContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboContratoActionPerformed(evt);
            }
        });
        BG.add(ComboContrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 140, 20));

        BotonGuardar1.setBackground(new java.awt.Color(102, 102, 102));
        BotonGuardar1.setFont(new java.awt.Font("Roboto Light", 1, 12)); // NOI18N
        BotonGuardar1.setText("NUEVO INGRESO");
        BotonGuardar1.setBorder(null);
        BotonGuardar1.setEnabled(false);
        BotonGuardar1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                BotonGuardar1ComponentShown(evt);
            }
        });
        BotonGuardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardar1ActionPerformed(evt);
            }
        });
        BG.add(BotonGuardar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, 180, 50));

        BotonMostrar.setBackground(new java.awt.Color(102, 102, 102));
        BotonMostrar.setFont(new java.awt.Font("Roboto Light", 1, 12)); // NOI18N
        BotonMostrar.setText("MOSTRAR LISTA PROFESORES");
        BotonMostrar.setBorder(null);
        BotonMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMostrarActionPerformed(evt);
            }
        });
        BG.add(BotonMostrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 450, 180, 50));

        BotonOtros.setBackground(new java.awt.Color(102, 102, 102));
        BotonOtros.setFont(new java.awt.Font("Roboto Light", 1, 12)); // NOI18N
        BotonOtros.setText("OTROS");
        BotonOtros.setBorder(null);
        BotonOtros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonOtrosActionPerformed(evt);
            }
        });
        BG.add(BotonOtros, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 430, 190, 50));

        BotonTotalPrf.setBackground(new java.awt.Color(102, 102, 102));
        BotonTotalPrf.setFont(new java.awt.Font("Roboto Light", 1, 12)); // NOI18N
        BotonTotalPrf.setText("MOSTRAR TOTAL PROFESORES");
        BotonTotalPrf.setBorder(null);
        BotonTotalPrf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonTotalPrfActionPerformed(evt);
            }
        });
        BG.add(BotonTotalPrf, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 150, 190, 50));

        BotonTCyCat.setBackground(new java.awt.Color(102, 102, 102));
        BotonTCyCat.setFont(new java.awt.Font("Roboto Light", 1, 12)); // NOI18N
        BotonTCyCat.setText("TIEMPO COMPLETO Y CATEDRA");
        BotonTCyCat.setBorder(null);
        BotonTCyCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonTCyCatActionPerformed(evt);
            }
        });
        BG.add(BotonTCyCat, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 220, 190, 50));

        BotonOcsCat.setBackground(new java.awt.Color(102, 102, 102));
        BotonOcsCat.setFont(new java.awt.Font("Roboto Light", 1, 12)); // NOI18N
        BotonOcsCat.setText("OCASIONALES Y CATEDRA");
        BotonOcsCat.setBorder(null);
        BotonOcsCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonOcsCatActionPerformed(evt);
            }
        });
        BG.add(BotonOcsCat, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 290, 190, 50));

        BotonTodosContratos.setBackground(new java.awt.Color(102, 102, 102));
        BotonTodosContratos.setFont(new java.awt.Font("Roboto Light", 1, 12)); // NOI18N
        BotonTodosContratos.setText("TODOS LOS CONTRATOS");
        BotonTodosContratos.setBorder(null);
        BotonTodosContratos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonTodosContratosActionPerformed(evt);
            }
        });
        BG.add(BotonTodosContratos, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 360, 190, 50));

        jLabel12.setFont(new java.awt.Font("Roboto Light", 3, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("PLATAFORMA DE GESTIÓN DE PROFESORES");
        BG.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 400, -1));

        getContentPane().add(BG, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void CedulatxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CedulatxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CedulatxtActionPerformed

    private void NombretxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombretxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombretxtActionPerformed

    private void CantidadHorastxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CantidadHorastxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CantidadHorastxtActionPerformed

    private void CantidadAsignaturastxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CantidadAsignaturastxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CantidadAsignaturastxtActionPerformed

    private void FechaNatxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FechaNatxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FechaNatxtActionPerformed

    private void JComboTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComboTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JComboTituloActionPerformed

    private void JComboFacultadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComboFacultadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JComboFacultadActionPerformed

    private void CedulatxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CedulatxtKeyReleased

        // TODO add your handling code here:
        Validaciones();
    }//GEN-LAST:event_CedulatxtKeyReleased

    private void NombretxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NombretxtKeyReleased

        Validaciones();
    }//GEN-LAST:event_NombretxtKeyReleased

    private void CantidadHorastxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CantidadHorastxtKeyReleased
        // TODO add your handling code here:
        Validaciones();
    }//GEN-LAST:event_CantidadHorastxtKeyReleased

    private void CantidadAsignaturastxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CantidadAsignaturastxtKeyReleased
        // TODO add your handling code here:
        Validaciones();
    }//GEN-LAST:event_CantidadAsignaturastxtKeyReleased

    private void FechaNatxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FechaNatxtKeyReleased
        // TODO add your handling code here:
        Validaciones();
    }//GEN-LAST:event_FechaNatxtKeyReleased

    private void ComboContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboContratoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboContratoActionPerformed

    private void JcomboGeneroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JcomboGeneroItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_JcomboGeneroItemStateChanged

    private void JComboFacultadItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JComboFacultadItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_JComboFacultadItemStateChanged

    private void JComboTituloItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JComboTituloItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_JComboTituloItemStateChanged

    private void ComboContratoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboContratoItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboContratoItemStateChanged

    private void BotonNuevoIngresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonNuevoIngresoActionPerformed
        // TODO add your handling code here:
        Profesor p1 = new Profesor(Cedulatxt.getText(), Nombretxt.getText(), (String) JcomboGenero.getSelectedItem(), (String) JComboFacultad.getSelectedItem(), (String) JComboTitulo.getSelectedItem(), CantidadAsignaturastxt.getText(), CantidadHorastxt.getText(), FechaNatxt.getText(), (String) ComboContrato.getSelectedItem());
        if (p1.getTipoContrato().equals("Tiempo Completo")) {
            ProfTiempoCom.add(p1);
        } else if (p1.getTipoContrato().equals("Ocasional")) {
            ProfOcasional.add(p1);
        } else if (p1.getTipoContrato().equals("Cátedra")) {
            ProfCatedra.add(p1);
        }

        JOptionPane.showMessageDialog(null, "Ingreso Exitoso!");
        BotonGuardar1.setEnabled(true);
        BotonMostrar.setEnabled(true);
        contadorFrecuencia++;
    }//GEN-LAST:event_BotonNuevoIngresoActionPerformed

    private void BotonGuardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardar1ActionPerformed
        // TODO add your handling code here:
        Limpiar();
        BotonNuevoIngreso.setEnabled(false);
        BotonGuardar1.setEnabled(false);
        contadorFrecuencia++;
    }//GEN-LAST:event_BotonGuardar1ActionPerformed

    private void BotonMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMostrarActionPerformed
        // TODO add your handling code here:
        int opt;
        do {
            opt = Integer.parseInt(JOptionPane.showInputDialog("1. Mostrar Profesores de Tiempo Completo\n"
                    + "2. Mostrar Profesores Ocasionales\n"
                    + "3. Mostrar Profesores de Cátedra\n"
                    + "0. Salir"));
            switch (opt) {
                case 1:
                    MostrarArrayTC();
                    break;
                case 2:
                    MostrarArrayOcas();
                    break;
                case 3:
                    MostrarArrayCat();
                    break;
                default:

            }
        } while (opt != 0);
        contadorFrecuencia++;
    }//GEN-LAST:event_BotonMostrarActionPerformed

    private void BotonGuardar1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_BotonGuardar1ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonGuardar1ComponentShown

    private void BotonOtrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonOtrosActionPerformed
        // TODO add your handling code here:
        int opt, opt2,opt3, opt4, opt5, opt6;
        
        do {
            opt = Integer.parseInt(JOptionPane.showInputDialog("1. Cantidad de Hombres y Mujeres Por Contrato\n"
                    + "2. Lista de Profesores por Facultad\n"
                    + "0. Salir"));
            switch (opt) {
                case 1:
                    do {
                        opt2 = Integer.parseInt(JOptionPane.showInputDialog("1. Cantidad de Hombres Y Mujeres de Tiempo Completo\n"
                                + "2. Cantidad de Hombres Y Mujeres de Cátedra\n"
                                + "3. Cantidad de Hombres Y Mujeres Ocasionales\n"
                                + "0. Salir"));

                        switch (opt2) {
                            case 1:
                                CantHoM(ConjuntoTC);
                                break;
                            case 2:
                                CantHoM(ConjuntoCat);
                                break;
                            case 3:
                                CantHoM(ConjuntoOcs);
                                break;
                            default:
                                JOptionPane.showMessageDialog(null, "Ingrese una opción válida");
                        }
                    } while (opt2 != 0);
                    break;
                case 2:
                    
                    
                    do {
                        opt3 = Integer.parseInt(JOptionPane.showInputDialog("1. Mostrar los profesores de Tiempo Completo por Facultad\n"
                                + "2. Mostrar los profesores de Cátedra por Facultad\n "
                                + "3. Mostrar los profesores Ocasionales por Facultad\n "
                                + "0. Salir"));
                        switch (opt3) {
                            case 1:
                                do {
                                    opt4 = Integer.parseInt(JOptionPane.showInputDialog("1. Mostrar Profesores de Ingenieria\n"
                                            + "2. Mostrar Profesores de Deportes\n"
                                            + "3. Mostrar Profesores de Comunicación\n"
                                            + "4. Mostrar Profesores de Administración\n"
                                            + "5. Mostrar Profesores de Idiomas\n"
                                            + "6. Mostrar Profesores de Ciencias Básicas\n"
                                            + "0. Salir"));
                                    switch (opt4) {
                                        case 1:
                                            MostrarFacultadTC(ConjuntoTC, "Ingeniería");
                                            break;
                                        case 2:
                                            MostrarFacultadTC(ConjuntoTC, "Deportes");
                                            break;
                                        case 3:
                                            MostrarFacultadTC(ConjuntoTC, "Comunicación");
                                            break;
                                        case 4:
                                            MostrarFacultadTC(ConjuntoTC, "Administración");
                                            break;
                                        case 5:
                                            MostrarFacultadTC(ConjuntoTC, "Idiomas");
                                            break;
                                        case 6:
                                            MostrarFacultadTC(ConjuntoTC, "Ciencias Básicas");
                                            break;
                                        default:
                                    }
                                } while (opt4 != 0);
                                break;
                            case 2:
                                do {
                                    opt5 = Integer.parseInt(JOptionPane.showInputDialog("1. Mostrar Profesores de Ingenieria\n"
                                            + "2. Mostrar Profesores de Deportes\n"
                                            + "3. Mostrar Profesores de Comunicación\n"
                                            + "4. Mostrar Profesores de Administración\n"
                                            + "5. Mostrar Profesores de Idiomas\n"
                                            + "6. Mostrar Profesores de Ciencias Básicas\n"
                                            + "0. Salir"));
                                    switch (opt5) {
                                        case 1:
                                            MostrarFacultadTC(ConjuntoCat, "Ingeniería");
                                            break;
                                        case 2:
                                            MostrarFacultadTC(ConjuntoCat, "Deportes");
                                            break;
                                        case 3:
                                            MostrarFacultadTC(ConjuntoCat, "Comunicación");
                                            break;
                                        case 4:
                                            MostrarFacultadTC(ConjuntoCat, "Administración");
                                            break;
                                        case 5:
                                            MostrarFacultadTC(ConjuntoCat, "Idiomas");
                                            break;
                                        case 6:
                                            MostrarFacultadTC(ConjuntoCat, "Ciencias Básicas");
                                            break;
                                        default:
                                    }
                                } while (opt5 != 0);
                                break;
                            case 3:
                                do {
                                    opt6 = Integer.parseInt(JOptionPane.showInputDialog("1. Mostrar Profesores de Ingenieria\n"
                                            + "2. Mostrar Profesores de Deportes\n"
                                            + "3. Mostrar Profesores de Comunicación\n"
                                            + "4. Mostrar Profesores de Administración\n"
                                            + "5. Mostrar Profesores de Idiomas\n"
                                            + "6. Mostrar Profesores de Ciencias Básicas\n"
                                            + "0. Salir"));
                                    switch (opt6) {
                                        case 1:
                                            MostrarFacultadTC(ConjuntoOcs, "Ingeniería");
                                            break;
                                        case 2:
                                            MostrarFacultadTC(ConjuntoOcs, "Deportes");
                                            break;
                                        case 3:
                                            MostrarFacultadTC(ConjuntoOcs, "Comunicación");
                                            break;
                                        case 4:
                                            MostrarFacultadTC(ConjuntoOcs, "Administración");
                                            break;
                                        case 5:
                                            MostrarFacultadTC(ConjuntoOcs, "Idiomas");
                                            break;
                                        case 6:
                                            MostrarFacultadTC(ConjuntoOcs, "Ciencias Básicas");
                                            break;
                                        default:
                                    }
                                } while (opt6 != 0);
                                break;
                            default:
                        }
                    } while (opt3 != 0);
                    break;
                default:
            }
        } while (opt != 0);
        contadorFrecuencia++;
    }//GEN-LAST:event_BotonOtrosActionPerformed

    private void BotonTotalPrfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonTotalPrfActionPerformed
        TreeSet<Profesor> ConjuntoUnion = new TreeSet<>(new Comparator<Profesor>() {
            public int compare(Profesor h1, Profesor h2) {
                return h1.getCedula().compareTo(h2.getCedula());
            }

        });
        ConjuntoTC.addAll(ProfTiempoCom);
        ConjuntoCat.addAll(ProfCatedra);
        ConjuntoOcs.addAll(ProfOcasional);

        ConjuntoUnion.addAll(ConjuntoTC);
        ConjuntoUnion.addAll(ConjuntoCat);
        ConjuntoUnion.addAll(ConjuntoOcs);

        StringBuilder mensaje = new StringBuilder("Lista Completa de Profesores\n");
        for (Profesor profesor : ConjuntoUnion) {

            mensaje.append("ID: ").append(profesor.getCedula()).append(". ");
            mensaje.append("Nombre: ").append(profesor.getNombre()).append(". ");
            mensaje.append("Horas Dictadas: ").append(profesor.getCantHoras()).append(". ");
            mensaje.append("Asignaturas: ").append(profesor.getCantAsign()).append(". ");
            mensaje.append("Fecha de Nacimiento: ").append(profesor.getFechaNac()).append(". ");
            mensaje.append("Sexo: ").append(profesor.getGenero()).append(". ");
            mensaje.append("Titulo: ").append(profesor.getTitulo()).append(". ");
            mensaje.append("Facultad: ").append(profesor.getFacultad()).append(". ");
            mensaje.append("Tipo de Contrato: ").append(profesor.getTipoContrato()).append("\n ");
        }
        JOptionPane.showMessageDialog(null, mensaje.toString());
        contadorFrecuencia++;
    }//GEN-LAST:event_BotonTotalPrfActionPerformed

    private void BotonTCyCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonTCyCatActionPerformed

        TreeSet<Profesor> ConjuntoUnion = new TreeSet<>(new Comparator<Profesor>() {
            public int compare(Profesor h1, Profesor h2) {

                return h1.getCedula().compareTo(h2.getCedula());
            }
        });

        ConjuntoTC.addAll(ProfTiempoCom);
        ConjuntoCat.addAll(ProfCatedra);

        for (Profesor profesor : ConjuntoTC) {
            if (ConjuntoCat.contains(profesor)) {
                ConjuntoUnion.add(profesor);
            }
        }

        StringBuilder mensaje = new StringBuilder("Lista De Profesores De Tiempo Completo y Cátedra\n");
        for (Profesor profesor : ConjuntoUnion) {

            mensaje.append("ID: ").append(profesor.getCedula()).append(". ");
            mensaje.append("Nombre: ").append(profesor.getNombre()).append(". ");
            mensaje.append("Horas Dictadas: ").append(profesor.getCantHoras()).append(". ");
            mensaje.append("Asignaturas: ").append(profesor.getCantAsign()).append(". ");
            mensaje.append("Fecha de Nacimiento: ").append(profesor.getFechaNac()).append(". ");
            mensaje.append("Sexo: ").append(profesor.getGenero()).append(". ");
            mensaje.append("Titulo: ").append(profesor.getTitulo()).append(". ");
            mensaje.append("Facultad: ").append(profesor.getFacultad()).append(". ");
            mensaje.append("Tipo de Contrato: ").append(profesor.getTipoContrato()).append(" Y Cátedra").append("\n ");
        }
        JOptionPane.showMessageDialog(null, mensaje.toString());

        contadorFrecuencia++;
    }//GEN-LAST:event_BotonTCyCatActionPerformed

    private void BotonOcsCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonOcsCatActionPerformed
        // TODO add your handling code here:

        TreeSet<Profesor> ConjuntoUnion = new TreeSet<>(new Comparator<Profesor>() {
            public int compare(Profesor h1, Profesor h2) {
                return h1.getCedula().compareTo(h2.getCedula());
            }

        });

        ConjuntoCat.addAll(ProfCatedra);
        ConjuntoOcs.addAll(ProfOcasional);
        for (Profesor profesor : ConjuntoCat) {
            if (ConjuntoOcs.contains(profesor)) {
                ConjuntoUnion.add(profesor);
            }
        }
        StringBuilder mensaje = new StringBuilder("Lista De Profesores Ocasionales y Cátedra\n");
        for (Profesor profesor : ConjuntoUnion) {

            mensaje.append("ID: ").append(profesor.getCedula()).append(". ");
            mensaje.append("Nombre: ").append(profesor.getNombre()).append(". ");
            mensaje.append("Horas Dictadas: ").append(profesor.getCantHoras()).append(". ");
            mensaje.append("Asignaturas: ").append(profesor.getCantAsign()).append(". ");
            mensaje.append("Fecha de Nacimiento: ").append(profesor.getFechaNac()).append(". ");
            mensaje.append("Sexo: ").append(profesor.getGenero()).append(". ");
            mensaje.append("Titulo: ").append(profesor.getTitulo()).append(". ");
            mensaje.append("Facultad: ").append(profesor.getFacultad()).append(". ");
            mensaje.append("Tipo de Contrato: ").append(profesor.getTipoContrato()).append(" y Ocasional").append("\n ");
        }
        JOptionPane.showMessageDialog(null, mensaje.toString());
        contadorFrecuencia++;

    }//GEN-LAST:event_BotonOcsCatActionPerformed

    private void BotonTodosContratosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonTodosContratosActionPerformed

        TreeSet<Profesor> ConjuntoUnion = new TreeSet<>(new Comparator<Profesor>() {
            public int compare(Profesor h1, Profesor h2) {
                return h1.getCedula().compareTo(h2.getCedula());
            }

        });
        ConjuntoTC.addAll(ProfTiempoCom);
        ConjuntoCat.addAll(ProfCatedra);
        ConjuntoOcs.addAll(ProfOcasional);
        for (Profesor profesor : ConjuntoTC) {
            if (ConjuntoCat.contains(profesor) && ConjuntoOcs.contains(profesor)) {
                ConjuntoUnion.add(profesor);
            }
        }
        StringBuilder mensaje = new StringBuilder("Lista De Profesores Tiempo Completo, Ocasionales y Cátedra\n");
        for (Profesor profesor : ConjuntoUnion) {

            mensaje.append("ID: ").append(profesor.getCedula()).append(". ");
            mensaje.append("Nombre: ").append(profesor.getNombre()).append(". ");
            mensaje.append("Horas Dictadas: ").append(profesor.getCantHoras()).append(". ");
            mensaje.append("Asignaturas: ").append(profesor.getCantAsign()).append(". ");
            mensaje.append("Fecha de Nacimiento: ").append(profesor.getFechaNac()).append(". ");
            mensaje.append("Sexo: ").append(profesor.getGenero()).append(". ");
            mensaje.append("Titulo: ").append(profesor.getTitulo()).append(". ");
            mensaje.append("Facultad: ").append(profesor.getFacultad()).append(". ");
            mensaje.append("Tipo de Contrato: ").append(profesor.getTipoContrato()).append(", Cátedra y Ocasional").append("\n ");
        }
        JOptionPane.showMessageDialog(null, mensaje.toString());

        contadorFrecuencia++;
    }//GEN-LAST:event_BotonTodosContratosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Vista().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BG;
    private javax.swing.JButton BotonGuardar1;
    private javax.swing.JButton BotonMostrar;
    private javax.swing.JButton BotonNuevoIngreso;
    private javax.swing.JButton BotonOcsCat;
    private javax.swing.JButton BotonOtros;
    private javax.swing.JButton BotonTCyCat;
    private javax.swing.JButton BotonTodosContratos;
    private javax.swing.JButton BotonTotalPrf;
    private javax.swing.JTextField CantidadAsignaturastxt;
    private javax.swing.JTextField CantidadHorastxt;
    private javax.swing.JTextField Cedulatxt;
    private javax.swing.JComboBox<String> ComboContrato;
    private javax.swing.JTextField FechaNatxt;
    private javax.swing.JComboBox<String> JComboFacultad;
    private javax.swing.JComboBox<String> JComboTitulo;
    private javax.swing.JComboBox<String> JcomboGenero;
    private javax.swing.JTextField Nombretxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel lblCantidadAsign1;
    private javax.swing.JLabel lblCantidadHoras1;
    private javax.swing.JLabel lblCedula2;
    private javax.swing.JLabel lblFechaNac;
    private javax.swing.JLabel lblNombreCompleto;
    // End of variables declaration//GEN-END:variables
}
